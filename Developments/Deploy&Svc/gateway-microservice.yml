apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  labels:
    app: gateway
spec:
  type: NodePort
  ports:
  - protocol: TCP
    # Rappresenta il numero di porta utilzzato dagli altri Servizi all'interno del Cluster per comunicare con il servizio stesso.
    # Gli altri Service del cluster per comunicare con questo Servizio dovranno quindi fare riferimento al suo DNS NAME e PORT NUMER
    port: 8080
  selector:
    app: gateway
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gateway-deploy
spec:
  selector:
    matchLabels:
        app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway-service
        image: drugotosto84/zuul-service:1.0.0-SNAPSHOT
        imagePullPolicy: Always
        # Lista delle porte che il dato container espone (solitamente 1) e che sono quindi accoppiate con quelle definite all'interno del suo Dockerfile (non è necesseria definirla) e che sarà accoppiata alla TargetPort del Service Object.
        # Sulla data porta ci sarà in ascolto una determinata applicazione 
        ports:
        - containerPort: 8080
  replicas: 1
  # Aspetta 10 sencondi prima di considerare ogni Pod pronto
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # Il Rolling Update avverrà tirando giù un Pod alla volta
      maxUnavailable: 1
      # Il Rolling Update avverrà senza avere più di 1 extra Pod esistente rispetto a quelli complessivi stabiliti da
      maxSurge: 1

